LPG:

        supported_kind.set_problem_class('ACTION_BASED')  # type: ignore
        supported_kind.set_problem_type('SIMPLE_NUMERIC_PLANNING')  # type: ignore
        supported_kind.set_problem_type("GENERAL_NUMERIC_PLANNING")  # type: ignore
        supported_kind.set_typing('FLAT_TYPING')  # type: ignore
        supported_kind.set_typing('HIERARCHICAL_TYPING')  # type: ignore
        supported_kind.set_fluents_type('INT_FLUENTS')  # type: ignore
        supported_kind.set_fluents_type('REAL_FLUENTS')  # type: ignore
        supported_kind.set_conditions_kind('EQUALITIES')  # type: ignore
        supported_kind.set_effects_kind('INCREASE_EFFECTS')  # type: ignore
        supported_kind.set_effects_kind('DECREASE_EFFECTS')  # type: ignore
        supported_kind.set_effects_kind('STATIC_FLUENTS_IN_NUMERIC_ASSIGNMENTS')  # type: ignore
        supported_kind.set_effects_kind('FLUENTS_IN_NUMERIC_ASSIGNMENTS')  # type: ignore
        supported_kind.set_time('CONTINUOUS_TIME')  # type: ignore
        supported_kind.set_quality_metrics('PLAN_LENGTH') # type: ignore
        supported_kind.set_expression_duration('INT_TYPE_DURATIONS')  # type: ignore
        supported_kind.set_expression_duration('REAL_TYPE_DURATIONS')  # type: ignore
        supported_kind.set_expression_duration('STATIC_FLUENTS_IN_DURATIONS')  # type: ignore
        supported_kind.set_actions_cost_kind('INT_NUMBERS_IN_ACTIONS_COST')  # type: ignore
        supported_kind.set_actions_cost_kind('REAL_NUMBERS_IN_ACTIONS_COST')  # type: ignore
        supported_kind.set_actions_cost_kind('STATIC_FLUENTS_IN_ACTIONS_COST')  # type: ignore
        supported_kind.set_actions_cost_kind('FLUENTS_IN_ACTIONS_COST')  # type: ignore



Instance Sets:

Barman
Childsnack
Floortile
GED
Hiking
Openstacks
Parking
Tetris
Thoughtful
Visitall
Data-network
organic-synthesis-split
Snake
Termes
Folding
Quantum-layout
Ricochet-robots
Slitherlink
